{"version":3,"file":"main.js","mappings":"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","sources":["webpack://butlerhospitality/./apps/infra-shared/pgutil.ts","webpack://butlerhospitality/external commonjs \"aws-sdk\"","webpack://butlerhospitality/external commonjs \"pg\"","webpack://butlerhospitality/external commonjs \"tslib\"","webpack://butlerhospitality/webpack/bootstrap","webpack://butlerhospitality/./apps/infra-shared/main.ts"],"sourcesContent":["import { Pool } from 'pg';\n// export namespace PG {\nexport const pool = new Pool({\n\tuser: process.env.POSTGRES_USER,\n\thost: process.env.POSTGRES_HOST,\n\tdatabase: 'service_iam',\n\tpassword: process.env.POSTGRES_PASSWORD,\n\tport: 5432,\n});\n\nexport const queryexec = async (input: QueryPGObject) => {\n\tconst start = Date.now()\n\ttry {\n\t\tconsole.log('pool-config: ', pool)\n\t\tconst res = await pool.query(input)\n\t\tconst duration = Date.now() - start\n\t\tconsole.log('executed query', { input, duration, rows: res.rowCount })\n\t\treturn res;\n\t} catch (e) {\n\t\tconsole.log('exec query error: ', e)\n\t}\n\n\treturn { command: '', rows: [], rowCount: 0 }\n}\n\nexport const getSingle = async (input: QueryPGObject) => {\n\tconst res = await queryexec(input);\n\treturn res.command == 'SELECT' && res.rows && res.rows.length ? res.rows[0] : {}\n}\n\nexport const insertquery = (\n\ttable: string,\n\tinput: { [key: string]: any } | { [key: string]: any }[],\n\tonConstraintQuery = ''\n) => {\n\tconst params: string[] = [];\n\tconst values: string[] = [];\n\tconst paramvalues: string[] = [];\n\tconst bulk = input.length > 0;\n\n\tif (bulk) {\n\t\tlet i: number = 0;\n\t\tlet idx: number = 0;\n\t\tinput.forEach((ob: { [key: string]: any }) => {\n\t\t\tconst keys: any[] = []\n\t\t\tObject.keys(ob).forEach((key: string) => {\n\t\t\t\tif (i === 0) {\n\t\t\t\t\tparams.push(key);\n\t\t\t\t}\n\t\t\t\tvalues.push(`$${idx + 1}`);\n\t\t\t\tkeys.push(`$${idx + 1}`);\n\t\t\t\tidx++;\n\t\t\t})\n\t\t\ti++;\n\t\t\tparamvalues.push(`(${keys.toString()})`)\n\t\t})\n\t} else {\n\t\tObject.keys(input).forEach((key: string, idx: number) => {\n\t\t\tparams.push(key);\n\t\t\tvalues.push(`$${idx + 1}`);\n\t\t})\n\t\tparamvalues.push(`(${values})`).toString();\n\t}\n\n\tlet inputvals = []\n\tif (bulk) {\n\t\tconst collectedValues = input.map((ob: any) => Object.values(ob).map((e: any) => (!e ? null : e)))\n\t\tinputvals = [].concat.apply([], collectedValues) //.toString().split(',')\n\t\tconsole.log('bulk-input: ', input)\n\t\tconsole.log('bulk-inputvals: ', inputvals)\n\t} else {\n\t\tinputvals = Object.values(input);\n\t\tconsole.log('input: ', input)\n\t\tconsole.log('inputvals: ', inputvals)\n\t}\n\n\tconst txt = `insert into ${table} (${params.toString()}) values ${paramvalues} ${onConstraintQuery} returning *`;\n\treturn {\n\t\ttext: txt,\n\t\tvalues: inputvals\n\t}\n}\n\nexport const insert = async (\n\ttable: string, input: { [key: string]: any } | { [key: string]: any }[], onConstraintQuery = ''\n) => {\n\tconst queryinput = insertquery(table, input, onConstraintQuery);\n\tconsole.log('queryinput: ', queryinput)\n\tconst output = await queryexec(queryinput);\n\n\tconsole.log('output: ', output)\n\n\tif (output && output.rows && output.rows.length) {\n\t\treturn Array.isArray(input) ? output.rows : output.rows[0]\n\t}\n\n\tthrow 'INSERT failure';\n}\n\nexport const updatequery = (table: string, id: number, input: { [key: string]: any }) => {\n\tconst params: string[] = [];\n\tObject.keys(input).forEach((key: string, idx: number) => {\n\t\tparams.push(`${key} = $${idx + 1}`);\n\t})\n\n\treturn {\n\t\ttext: `update ${table} set ${params.toString()} where id = $${Object.keys(input).length + 1} returning *`,\n\t\tvalues: Object.values(input).concat([id.toString()])\n\t}\n}\n\nexport const update = async (table: string, id: number, input: { [key: string]: any }) => {\n\tconst queryinput = updatequery(table, id, input)\n\tconst output = await queryexec(queryinput);\n\n\tif (output && output.rows && output.rows.length) {\n\t\treturn output.rows[0]\n\t}\n\n\tthrow 'UPDATE failure';\n}\n\n\nexport interface QueryPGObject {\n\ttext: string;\n\tvalues?: any[];\n}\n","module.exports = require(\"aws-sdk\");","module.exports = require(\"pg\");","module.exports = require(\"tslib\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import * as AWS from 'aws-sdk';\n\nimport { SNSEvent } from 'aws-lambda';\nimport { getSingle, insert, queryexec, update } from './pgutil';\n\nconst dynamoDB = new AWS.DynamoDB.DocumentClient(\n  process.env.STAGE === 'local' ? {\n    region: 'localhost',\n    endpoint: 'http://localhost:4566',\n  } : {});\n\nconst afterServiceDeploy = async (event: SNSEvent) => {\n\n  console.log('event: ', event)\n  const record = JSON.parse(event.Records[0].Sns.Message)\n  const serviceName = record.serviceName //this is our app name also\n\n  const data = await dynamoDB.query({\n    TableName: process.env.MAIN_TABLE || '',\n    KeyConditionExpression: '#pk = :pk and begins_with(#sk, :sk)',\n    ExpressionAttributeNames: {\n      '#pk': 'pk',\n      '#sk': 'sk'\n    },\n    ExpressionAttributeValues: {\n      ':pk': 'permission',\n      ':sk': `permission::${serviceName}`\n    }\n  }).promise()\n\n  const appdata = await dynamoDB.get({\n    TableName: process.env.MAIN_TABLE || '',\n    Key: {\n      pk: 'app',\n      sk: `app::${serviceName}`\n    },\n  }).promise()\n\n  console.log('app-=data: ', appdata)\n\n  console.log('event-came-here', record)\n  console.log('data: ', data)\n\n  let app = await getSingle({\n    text: 'select * from app where name = $1',\n    values: [serviceName]\n  })\n\n  console.log('found-app: ', app)\n  if (Object.keys(app).length === 0) {\n    console.log('not-found-app: ', app)\n    app = await insert('app', {\n      name: serviceName,\n      description: appdata.Item?.description,\n      dashboard_settings: appdata.Item?.dashboardSettings\n    })\n    console.log('inserted-new-app: ', app)\n  } else {\n    //update the dashboard settings\n    try {\n      await update('app', app.id, {dashboard_settings: appdata.Item?.dashboardSettings})\n    } catch (e) {\n      console.log('error-updating-app-dbsettings: ', e)\n    }\n  }\n\n  console.log('app-in-the-end: ', app)\n\n  const permissionsToInsert: any[] = []\n  const generalPermissionGroupName = `${String(app.name)}-ALL-GROUP`\n  let permissionGroup = await getSingle({\n    text: 'select * from permissiongroup where name = $1',\n    values: [generalPermissionGroupName]\n  })\n\n  if (Object.keys(permissionGroup).length === 0) {\n    permissionGroup = await insert('permissiongroup', { name: generalPermissionGroupName })\n  }\n\n  data.Items?.forEach((el: any) => {\n    const permComposite = el.sk.split('::')\n    if (el.arn)\n      permissionsToInsert.push({ name: String(permComposite[2]), arn: el.arn, app_id: app.id })\n    return\n  });\n\n  const permissionGroupPermissionMapper = (permgroup: any, permissions: any[]) => {\n    return permissions.map((permission: any) => {\n      return {\n        permissiongroup_id: permgroup.id,\n        permission_id: permission.id\n      }\n    })\n  }\n\n  if (permissionsToInsert) {\n    try {\n      //todo: make this a transaction\n      await queryexec({\n        text: 'delete from permission where app_id = $1',\n        values: [app.id]\n      })\n      const insertedPermissions = await insert('permission', permissionsToInsert)\n      console.log('insertedPermissions: ', insertedPermissions)\n      const insertedPermissionsGroupPermissions = await insert('permissiongroup_permission', permissionGroupPermissionMapper(permissionGroup, insertedPermissions))\n      console.log('permission-group-permissions: ', insertedPermissionsGroupPermissions)\n    } catch (e) {\n      console.log('error-insert: ', e)\n    }\n  }\n}\n\n\nexport {\n  afterServiceDeploy\n};\n"],"names":[],"sourceRoot":""}