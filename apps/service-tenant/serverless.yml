service: tenant
provider:
  name: 'aws'
  runtime: nodejs12.x
  stage: ${opt:stage, 'dev'}
  apiGateway:
    restApiId: ${self:custom.secrets.api_tenants_id}
    restApiRootResourceId: ${self:custom.secrets.api_tenants_root_resource_id}
    description: Some Description of deployment history
  environment:
    STAGE: ${self:provider.stage}
    TABLE_MAIN: ${self:custom.secrets.dynamodb_app_main_table_name}

  iamRoleStatements:
    - Effect: 'Allow'
      Action:
        - dynamodb:*
      Resource: '*'
plugins:
  - serverless-pseudo-parameters
  - serverless-plugin-warmup
  - serverless-plugin-aws-alerts
  #- serverless-plugin-datadog
custom:
  #datadog:
    #site: ${self:custom.secrets.datadog_site, "datadoghq.com"}
    #apiKey: ${self:custom.secrets.datadog_apikey, "default"}

  warmup:
    default:
      enabled: true
  secrets: ${ssm:/aws/reference/secretsmanager/${self:provider.stage}/infra~true}
  alerts:
    topics:
      alarm:
        topic: ${self:custom.secrets.cloudwatch_alarms_sns_arn}
    definitions:
      functionTimeout:
        description: Timeout of Lambda function
        namespace: AWS/Lambda
        nameTemplate: $[functionName]-Function-Timeout-Alarm
        metric: Duration
        threshold: 30000
        statistic: Maximum
        period: 60
        evaluationPeriods: 1
        datapointsToAlarm: 1
        comparisonOperator: GreaterThanOrEqualToThreshold
      apiGateway4xxError:
        apiName: ${self:custom.secrets.api_tenants_name}
        resourcePrefix: /api/ # todo get it from secrets
      apiGateway5xxError:
        apiName: ${self:custom.secrets.api_tenants_name}
        resourcePrefix: /api/ # todo get it from secrets
    alarms:
      - functionErrorRate
      - functionTimeout
      - apiGateway5xxError
      - apiGateway4xxError
  app-definition:
    name: 'Identity and access management'
    description: 'Manage users and roles across all services'
    dashboardSettings:
      color: '#7B61FF'
      icon: 'Users'
      path: 'iam'
      title: 'Users'

functions:
  - ${file(./infrastructure/serverless/function/tenant.yml)}
