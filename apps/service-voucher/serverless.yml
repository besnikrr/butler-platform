service: voucher

provider:
  name: "aws"
  runtime: nodejs12.x
  stage: ${opt:stage, 'local'}
  apiGateway:
    restApiId: ${self:custom.secrets.api_tenants_id}
    restApiRootResourceId: ${self:custom.secrets.api_tenants_root_resource_id}
    description: Some Description of deployment history
  vpc:
    securityGroupIds:
      - ${self:custom.secrets.aurora_lambdas_sg_id}
    subnetIds:
      - ${self:custom.secrets.vpc_subnet_private_1}
      - ${self:custom.secrets.vpc_subnet_private_2}
      - ${self:custom.secrets.vpc_subnet_private_3}
  environment:
    voucherHotelOnMenuAssignActionQueue: ${self:custom.ext-config.voucherHotelOnMenuAssignActionQueue}
    ServiceVoucherProgramTopic: ${self:custom.ext-config.ServiceVoucherProgramTopic}
    voucherHotelOnNetworkHotelActionQueue: ${self:custom.ext-config.voucherHotelOnNetworkHotelActionQueue}
    voucherHubOnNetworkHubActionQueue: ${self:custom.ext-config.voucherHubOnNetworkHubActionQueue}
    voucherCategoryOnMenuCategoryActionQueue: ${self:custom.ext-config.voucherCategoryOnMenuCategoryActionQueue}
    ServiceVoucherHotel: "arn:aws:sns:#{AWS::Region}:#{AWS::AccountId}:SERVICE_VOUCHER_HOTEL-${self:provider.stage}.fifo"
    ServiceVoucherHub: "arn:aws:sns:#{AWS::Region}:#{AWS::AccountId}:SERVICE_VOUCHER_HUB-${self:provider.stage}.fifo"
    STAGE: ${self:provider.stage, 'dev'}
    REGION: ${self:provider.region, 'us-east-1'}
    VOUCHER_BUCKET: ${self:provider.environment.STAGE}-voucher-butler-#{AWS::AccountId}
    DEFAULT_TENANT: "butler"
    DB: service_voucher
    AURORA_ENDPOINT: ${self:custom.secrets.aurora_endpoint}
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - s3:*
        - sns:*
        - sqs:*
        - states:*
        - secretsmanager:*
      Resource: "*"
plugins:
  - "@butlerhospitality/sfsp-plugin"
  - serverless-pseudo-parameters
  - serverless-plugin-aws-alerts
  - serverless-plugin-warmup
  - serverless-prune-plugin
  - serverless-plugin-split-stacks
  #- serverless-plugin-datadog

custom:
  #datadog:
    #site: ${self:custom.secrets.datadog_site, "datadoghq.com"}
    #apiKey: ${self:custom.secrets.datadog_apikey, "default"}
  ext-config:
    voucherHotelOnMenuAssignActionQueue: arn:aws:sqs:${self:provider.region}:${self:custom.accountId}:voucherHotelOnMenuAssignActionQueue.fifo
    ServiceVoucherProgramTopic: arn:aws:sns:${self:provider.region}:${self:custom.accountId}:SERVICE_VOUCHER_PROGRAM_TOPIC-${self:provider.stage}.fifo
    voucherHotelOnNetworkHotelActionQueue: arn:aws:sqs:${self:provider.region}:${self:custom.accountId}:voucherHotelOnNetworkHotelActionQueue.fifo
    voucherHubOnNetworkHubActionQueue: arn:aws:sqs:${self:provider.region}:${self:custom.accountId}:voucherHubOnNetworkHubActionQueue.fifo
    voucherCategoryOnMenuCategoryActionQueue: arn:aws:sqs:${self:provider.region}:${self:custom.accountId}:voucherCategoryOnMenuCategoryActionQueue.fifo
    AfterDeployTopic: arn:aws:sns:${self:provider.region}:${self:custom.accountId}:AFTER_DEPLOY_TOPIC
  splitStacks:
    nestedStackCount: 30
    perFunction: false
    perType: false
    perGroupFunction: true
  warmup:
    default:
      enabled: true
  prune:
    automatic: true
    number: 3
  secrets: ${ssm:/aws/reference/secretsmanager/${self:provider.stage}/infra~true}
  TENANTS_API_GATEWAY: ${self:custom.secrets.api_tenants_id}
  TABLE_MAIN: ${self:custom.secrets.dynamodb_app_main_table_name}
  AFTER_DEPLOY_TOPIC: ${self:custom.ext-config.AfterDeployTopic}
  accountId: ${self:custom.secrets.account_id}
  alerts:
    topics:
      alarm:
        topic: ${self:custom.secrets.cloudwatch_alarms_sns_arn}
    definitions:
      functionTimeout:
        description: Timeout of Lambda function
        namespace: AWS/Lambda
        nameTemplate: $[functionName]-Function-Timeout-Alarm
        metric: Duration
        threshold: 30000
        statistic: Maximum
        period: 60
        evaluationPeriods: 1
        datapointsToAlarm: 1
        comparisonOperator: GreaterThanOrEqualToThreshold
      apiGateway4xxError:
        apiName: ${self:custom.secrets.api_tenants_name}
        resourcePrefix: /api/ # todo get it from secrets
      apiGateway5xxError:
        apiName: ${self:custom.secrets.api_tenants_name}
        resourcePrefix: /api/ # todo get it from secrets
    alarms:
      - functionErrorRate
      - functionTimeout
      - apiGateway4xxError
      - apiGateway5xxError
  app-definition:
    name: "Voucher"
    description: "Manage vouchers"
    dashboard-settings:
      group: "voucher"
      iconColor: "#ffffff"
      color: "#2F9C95"
      icon: "Voucher"
      path: "voucher"
      title: "Voucher"

resources: {}

functions:
  - ${file(./infrastructure/serverless/listeners/voucher-hotel-on-menu-assign-action.yml)}
  - ${file(./infrastructure/serverless/listeners/voucher-hotel-on-network-hotel-action.yml)}
  - ${file(./infrastructure/serverless/listeners/voucher-hub-on-network-hub-action.yml)}
  - ${file(./infrastructure/serverless/listeners/voucher-category-on-menu-category-action.yml)}
  - ${file(./infrastructure/serverless/functions/migrations.yml)}
  - ${file(./infrastructure/serverless/functions/category.yml)}
  - ${file(./infrastructure/serverless/functions/hotel.yml)}
  - ${file(./infrastructure/serverless/functions/program.yml)}
  - ${file(./infrastructure/serverless/functions/code.yml)}
